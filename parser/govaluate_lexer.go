// Code generated from Govaluate.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type GovaluateLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var GovaluateLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func govaluatelexerLexerInit() {
	staticData := &GovaluateLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "';'", "'.'", "'['", "']'", "'('", "')'", "'+'", "'-'", "'++'",
		"'--'", "'~'", "'!'", "'*'", "'/'", "'%'", "'**'", "'^'", "'<<'", "'>>'",
		"'<='", "'>='", "'>'", "'<'", "'=='", "'!='", "'&'", "'|'", "'&&'",
		"'||'", "'?'", "':'", "'='", "'+='", "'-='", "'*='", "'/='", "'in'",
		"','",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "FLOAT_LITERAL", "STRING_LITERAL", "BOOL_LITERAL",
		"IDENTIFIER", "WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
		"T__33", "T__34", "T__35", "T__36", "T__37", "FLOAT_LITERAL", "ExponentPart",
		"Digits", "STRING_LITERAL", "EscapeSequence", "HexDigits", "HexDigit",
		"BOOL_LITERAL", "IDENTIFIER", "LetterOrDigit", "Letter", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 43, 334, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2,
		1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8,
		1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12,
		1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1,
		17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20,
		1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1,
		25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 29,
		1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1,
		33, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 37,
		1, 37, 1, 38, 4, 38, 195, 8, 38, 11, 38, 12, 38, 196, 1, 38, 1, 38, 1,
		38, 3, 38, 202, 8, 38, 1, 38, 1, 38, 3, 38, 206, 8, 38, 1, 38, 3, 38, 209,
		8, 38, 1, 38, 3, 38, 212, 8, 38, 1, 38, 1, 38, 1, 38, 3, 38, 217, 8, 38,
		1, 38, 3, 38, 220, 8, 38, 3, 38, 222, 8, 38, 1, 39, 1, 39, 3, 39, 226,
		8, 39, 1, 39, 1, 39, 1, 40, 1, 40, 5, 40, 232, 8, 40, 10, 40, 12, 40, 235,
		9, 40, 1, 40, 3, 40, 238, 8, 40, 1, 41, 1, 41, 1, 41, 5, 41, 243, 8, 41,
		10, 41, 12, 41, 246, 9, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 3,
		42, 254, 8, 42, 1, 42, 3, 42, 257, 8, 42, 1, 42, 1, 42, 1, 42, 4, 42, 262,
		8, 42, 11, 42, 12, 42, 263, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 3, 42, 271,
		8, 42, 1, 43, 1, 43, 1, 43, 5, 43, 276, 8, 43, 10, 43, 12, 43, 279, 9,
		43, 1, 43, 3, 43, 282, 8, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45,
		1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 3, 45, 295, 8, 45, 1, 46, 1, 46, 5,
		46, 299, 8, 46, 10, 46, 12, 46, 302, 9, 46, 1, 46, 1, 46, 1, 46, 1, 46,
		1, 46, 5, 46, 309, 8, 46, 10, 46, 12, 46, 312, 9, 46, 1, 46, 1, 46, 3,
		46, 316, 8, 46, 1, 47, 1, 47, 3, 47, 320, 8, 47, 1, 48, 1, 48, 1, 48, 1,
		48, 3, 48, 326, 8, 48, 1, 49, 4, 49, 329, 8, 49, 11, 49, 12, 49, 330, 1,
		49, 1, 49, 0, 0, 50, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8,
		17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17,
		35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26,
		53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35,
		71, 36, 73, 37, 75, 38, 77, 39, 79, 0, 81, 0, 83, 40, 85, 0, 87, 0, 89,
		0, 91, 41, 93, 42, 95, 0, 97, 0, 99, 43, 1, 0, 16, 1, 0, 48, 57, 4, 0,
		68, 68, 70, 70, 100, 100, 102, 102, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43,
		45, 45, 2, 0, 48, 57, 95, 95, 4, 0, 10, 10, 13, 13, 39, 39, 92, 92, 8,
		0, 34, 34, 39, 39, 92, 92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116,
		1, 0, 48, 51, 1, 0, 48, 55, 3, 0, 48, 57, 65, 70, 97, 102, 3, 0, 45, 45,
		48, 57, 95, 95, 3, 0, 36, 36, 65, 90, 97, 122, 2, 0, 0, 127, 55296, 56319,
		1, 0, 55296, 56319, 1, 0, 56320, 57343, 3, 0, 9, 10, 13, 13, 32, 32, 356,
		0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0,
		0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0,
		0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0,
		0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1,
		0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39,
		1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0,
		47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0,
		0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0,
		0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0,
		0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1,
		0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 99,
		1, 0, 0, 0, 1, 101, 1, 0, 0, 0, 3, 103, 1, 0, 0, 0, 5, 105, 1, 0, 0, 0,
		7, 107, 1, 0, 0, 0, 9, 109, 1, 0, 0, 0, 11, 111, 1, 0, 0, 0, 13, 113, 1,
		0, 0, 0, 15, 115, 1, 0, 0, 0, 17, 117, 1, 0, 0, 0, 19, 120, 1, 0, 0, 0,
		21, 123, 1, 0, 0, 0, 23, 125, 1, 0, 0, 0, 25, 127, 1, 0, 0, 0, 27, 129,
		1, 0, 0, 0, 29, 131, 1, 0, 0, 0, 31, 133, 1, 0, 0, 0, 33, 136, 1, 0, 0,
		0, 35, 138, 1, 0, 0, 0, 37, 141, 1, 0, 0, 0, 39, 144, 1, 0, 0, 0, 41, 147,
		1, 0, 0, 0, 43, 150, 1, 0, 0, 0, 45, 152, 1, 0, 0, 0, 47, 154, 1, 0, 0,
		0, 49, 157, 1, 0, 0, 0, 51, 160, 1, 0, 0, 0, 53, 162, 1, 0, 0, 0, 55, 164,
		1, 0, 0, 0, 57, 167, 1, 0, 0, 0, 59, 170, 1, 0, 0, 0, 61, 172, 1, 0, 0,
		0, 63, 174, 1, 0, 0, 0, 65, 176, 1, 0, 0, 0, 67, 179, 1, 0, 0, 0, 69, 182,
		1, 0, 0, 0, 71, 185, 1, 0, 0, 0, 73, 188, 1, 0, 0, 0, 75, 191, 1, 0, 0,
		0, 77, 221, 1, 0, 0, 0, 79, 223, 1, 0, 0, 0, 81, 229, 1, 0, 0, 0, 83, 239,
		1, 0, 0, 0, 85, 270, 1, 0, 0, 0, 87, 272, 1, 0, 0, 0, 89, 283, 1, 0, 0,
		0, 91, 294, 1, 0, 0, 0, 93, 315, 1, 0, 0, 0, 95, 319, 1, 0, 0, 0, 97, 325,
		1, 0, 0, 0, 99, 328, 1, 0, 0, 0, 101, 102, 5, 59, 0, 0, 102, 2, 1, 0, 0,
		0, 103, 104, 5, 46, 0, 0, 104, 4, 1, 0, 0, 0, 105, 106, 5, 91, 0, 0, 106,
		6, 1, 0, 0, 0, 107, 108, 5, 93, 0, 0, 108, 8, 1, 0, 0, 0, 109, 110, 5,
		40, 0, 0, 110, 10, 1, 0, 0, 0, 111, 112, 5, 41, 0, 0, 112, 12, 1, 0, 0,
		0, 113, 114, 5, 43, 0, 0, 114, 14, 1, 0, 0, 0, 115, 116, 5, 45, 0, 0, 116,
		16, 1, 0, 0, 0, 117, 118, 5, 43, 0, 0, 118, 119, 5, 43, 0, 0, 119, 18,
		1, 0, 0, 0, 120, 121, 5, 45, 0, 0, 121, 122, 5, 45, 0, 0, 122, 20, 1, 0,
		0, 0, 123, 124, 5, 126, 0, 0, 124, 22, 1, 0, 0, 0, 125, 126, 5, 33, 0,
		0, 126, 24, 1, 0, 0, 0, 127, 128, 5, 42, 0, 0, 128, 26, 1, 0, 0, 0, 129,
		130, 5, 47, 0, 0, 130, 28, 1, 0, 0, 0, 131, 132, 5, 37, 0, 0, 132, 30,
		1, 0, 0, 0, 133, 134, 5, 42, 0, 0, 134, 135, 5, 42, 0, 0, 135, 32, 1, 0,
		0, 0, 136, 137, 5, 94, 0, 0, 137, 34, 1, 0, 0, 0, 138, 139, 5, 60, 0, 0,
		139, 140, 5, 60, 0, 0, 140, 36, 1, 0, 0, 0, 141, 142, 5, 62, 0, 0, 142,
		143, 5, 62, 0, 0, 143, 38, 1, 0, 0, 0, 144, 145, 5, 60, 0, 0, 145, 146,
		5, 61, 0, 0, 146, 40, 1, 0, 0, 0, 147, 148, 5, 62, 0, 0, 148, 149, 5, 61,
		0, 0, 149, 42, 1, 0, 0, 0, 150, 151, 5, 62, 0, 0, 151, 44, 1, 0, 0, 0,
		152, 153, 5, 60, 0, 0, 153, 46, 1, 0, 0, 0, 154, 155, 5, 61, 0, 0, 155,
		156, 5, 61, 0, 0, 156, 48, 1, 0, 0, 0, 157, 158, 5, 33, 0, 0, 158, 159,
		5, 61, 0, 0, 159, 50, 1, 0, 0, 0, 160, 161, 5, 38, 0, 0, 161, 52, 1, 0,
		0, 0, 162, 163, 5, 124, 0, 0, 163, 54, 1, 0, 0, 0, 164, 165, 5, 38, 0,
		0, 165, 166, 5, 38, 0, 0, 166, 56, 1, 0, 0, 0, 167, 168, 5, 124, 0, 0,
		168, 169, 5, 124, 0, 0, 169, 58, 1, 0, 0, 0, 170, 171, 5, 63, 0, 0, 171,
		60, 1, 0, 0, 0, 172, 173, 5, 58, 0, 0, 173, 62, 1, 0, 0, 0, 174, 175, 5,
		61, 0, 0, 175, 64, 1, 0, 0, 0, 176, 177, 5, 43, 0, 0, 177, 178, 5, 61,
		0, 0, 178, 66, 1, 0, 0, 0, 179, 180, 5, 45, 0, 0, 180, 181, 5, 61, 0, 0,
		181, 68, 1, 0, 0, 0, 182, 183, 5, 42, 0, 0, 183, 184, 5, 61, 0, 0, 184,
		70, 1, 0, 0, 0, 185, 186, 5, 47, 0, 0, 186, 187, 5, 61, 0, 0, 187, 72,
		1, 0, 0, 0, 188, 189, 5, 105, 0, 0, 189, 190, 5, 110, 0, 0, 190, 74, 1,
		0, 0, 0, 191, 192, 5, 44, 0, 0, 192, 76, 1, 0, 0, 0, 193, 195, 7, 0, 0,
		0, 194, 193, 1, 0, 0, 0, 195, 196, 1, 0, 0, 0, 196, 194, 1, 0, 0, 0, 196,
		197, 1, 0, 0, 0, 197, 222, 1, 0, 0, 0, 198, 199, 3, 81, 40, 0, 199, 201,
		5, 46, 0, 0, 200, 202, 3, 81, 40, 0, 201, 200, 1, 0, 0, 0, 201, 202, 1,
		0, 0, 0, 202, 206, 1, 0, 0, 0, 203, 204, 5, 46, 0, 0, 204, 206, 3, 81,
		40, 0, 205, 198, 1, 0, 0, 0, 205, 203, 1, 0, 0, 0, 206, 208, 1, 0, 0, 0,
		207, 209, 3, 79, 39, 0, 208, 207, 1, 0, 0, 0, 208, 209, 1, 0, 0, 0, 209,
		211, 1, 0, 0, 0, 210, 212, 7, 1, 0, 0, 211, 210, 1, 0, 0, 0, 211, 212,
		1, 0, 0, 0, 212, 222, 1, 0, 0, 0, 213, 219, 3, 81, 40, 0, 214, 216, 3,
		79, 39, 0, 215, 217, 7, 1, 0, 0, 216, 215, 1, 0, 0, 0, 216, 217, 1, 0,
		0, 0, 217, 220, 1, 0, 0, 0, 218, 220, 7, 1, 0, 0, 219, 214, 1, 0, 0, 0,
		219, 218, 1, 0, 0, 0, 220, 222, 1, 0, 0, 0, 221, 194, 1, 0, 0, 0, 221,
		205, 1, 0, 0, 0, 221, 213, 1, 0, 0, 0, 222, 78, 1, 0, 0, 0, 223, 225, 7,
		2, 0, 0, 224, 226, 7, 3, 0, 0, 225, 224, 1, 0, 0, 0, 225, 226, 1, 0, 0,
		0, 226, 227, 1, 0, 0, 0, 227, 228, 3, 81, 40, 0, 228, 80, 1, 0, 0, 0, 229,
		237, 7, 0, 0, 0, 230, 232, 7, 4, 0, 0, 231, 230, 1, 0, 0, 0, 232, 235,
		1, 0, 0, 0, 233, 231, 1, 0, 0, 0, 233, 234, 1, 0, 0, 0, 234, 236, 1, 0,
		0, 0, 235, 233, 1, 0, 0, 0, 236, 238, 7, 0, 0, 0, 237, 233, 1, 0, 0, 0,
		237, 238, 1, 0, 0, 0, 238, 82, 1, 0, 0, 0, 239, 244, 5, 39, 0, 0, 240,
		243, 8, 5, 0, 0, 241, 243, 3, 85, 42, 0, 242, 240, 1, 0, 0, 0, 242, 241,
		1, 0, 0, 0, 243, 246, 1, 0, 0, 0, 244, 242, 1, 0, 0, 0, 244, 245, 1, 0,
		0, 0, 245, 247, 1, 0, 0, 0, 246, 244, 1, 0, 0, 0, 247, 248, 5, 39, 0, 0,
		248, 84, 1, 0, 0, 0, 249, 250, 5, 92, 0, 0, 250, 271, 7, 6, 0, 0, 251,
		256, 5, 92, 0, 0, 252, 254, 7, 7, 0, 0, 253, 252, 1, 0, 0, 0, 253, 254,
		1, 0, 0, 0, 254, 255, 1, 0, 0, 0, 255, 257, 7, 8, 0, 0, 256, 253, 1, 0,
		0, 0, 256, 257, 1, 0, 0, 0, 257, 258, 1, 0, 0, 0, 258, 271, 7, 8, 0, 0,
		259, 261, 5, 92, 0, 0, 260, 262, 5, 117, 0, 0, 261, 260, 1, 0, 0, 0, 262,
		263, 1, 0, 0, 0, 263, 261, 1, 0, 0, 0, 263, 264, 1, 0, 0, 0, 264, 265,
		1, 0, 0, 0, 265, 266, 3, 89, 44, 0, 266, 267, 3, 89, 44, 0, 267, 268, 3,
		89, 44, 0, 268, 269, 3, 89, 44, 0, 269, 271, 1, 0, 0, 0, 270, 249, 1, 0,
		0, 0, 270, 251, 1, 0, 0, 0, 270, 259, 1, 0, 0, 0, 271, 86, 1, 0, 0, 0,
		272, 281, 3, 89, 44, 0, 273, 276, 3, 89, 44, 0, 274, 276, 5, 95, 0, 0,
		275, 273, 1, 0, 0, 0, 275, 274, 1, 0, 0, 0, 276, 279, 1, 0, 0, 0, 277,
		275, 1, 0, 0, 0, 277, 278, 1, 0, 0, 0, 278, 280, 1, 0, 0, 0, 279, 277,
		1, 0, 0, 0, 280, 282, 3, 89, 44, 0, 281, 277, 1, 0, 0, 0, 281, 282, 1,
		0, 0, 0, 282, 88, 1, 0, 0, 0, 283, 284, 7, 9, 0, 0, 284, 90, 1, 0, 0, 0,
		285, 286, 5, 116, 0, 0, 286, 287, 5, 114, 0, 0, 287, 288, 5, 117, 0, 0,
		288, 295, 5, 101, 0, 0, 289, 290, 5, 102, 0, 0, 290, 291, 5, 97, 0, 0,
		291, 292, 5, 108, 0, 0, 292, 293, 5, 115, 0, 0, 293, 295, 5, 101, 0, 0,
		294, 285, 1, 0, 0, 0, 294, 289, 1, 0, 0, 0, 295, 92, 1, 0, 0, 0, 296, 300,
		3, 97, 48, 0, 297, 299, 3, 95, 47, 0, 298, 297, 1, 0, 0, 0, 299, 302, 1,
		0, 0, 0, 300, 298, 1, 0, 0, 0, 300, 301, 1, 0, 0, 0, 301, 316, 1, 0, 0,
		0, 302, 300, 1, 0, 0, 0, 303, 304, 5, 36, 0, 0, 304, 305, 5, 123, 0, 0,
		305, 306, 1, 0, 0, 0, 306, 310, 3, 97, 48, 0, 307, 309, 3, 95, 47, 0, 308,
		307, 1, 0, 0, 0, 309, 312, 1, 0, 0, 0, 310, 308, 1, 0, 0, 0, 310, 311,
		1, 0, 0, 0, 311, 313, 1, 0, 0, 0, 312, 310, 1, 0, 0, 0, 313, 314, 5, 125,
		0, 0, 314, 316, 1, 0, 0, 0, 315, 296, 1, 0, 0, 0, 315, 303, 1, 0, 0, 0,
		316, 94, 1, 0, 0, 0, 317, 320, 3, 97, 48, 0, 318, 320, 7, 10, 0, 0, 319,
		317, 1, 0, 0, 0, 319, 318, 1, 0, 0, 0, 320, 96, 1, 0, 0, 0, 321, 326, 7,
		11, 0, 0, 322, 326, 8, 12, 0, 0, 323, 324, 7, 13, 0, 0, 324, 326, 7, 14,
		0, 0, 325, 321, 1, 0, 0, 0, 325, 322, 1, 0, 0, 0, 325, 323, 1, 0, 0, 0,
		326, 98, 1, 0, 0, 0, 327, 329, 7, 15, 0, 0, 328, 327, 1, 0, 0, 0, 329,
		330, 1, 0, 0, 0, 330, 328, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0, 331, 332,
		1, 0, 0, 0, 332, 333, 6, 49, 0, 0, 333, 100, 1, 0, 0, 0, 28, 0, 196, 201,
		205, 208, 211, 216, 219, 221, 225, 233, 237, 242, 244, 253, 256, 263, 270,
		275, 277, 281, 294, 300, 310, 315, 319, 325, 330, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// GovaluateLexerInit initializes any static state used to implement GovaluateLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewGovaluateLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func GovaluateLexerInit() {
	staticData := &GovaluateLexerLexerStaticData
	staticData.once.Do(govaluatelexerLexerInit)
}

// NewGovaluateLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewGovaluateLexer(input antlr.CharStream) *GovaluateLexer {
	GovaluateLexerInit()
	l := new(GovaluateLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &GovaluateLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "Govaluate.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// GovaluateLexer tokens.
const (
	GovaluateLexerT__0           = 1
	GovaluateLexerT__1           = 2
	GovaluateLexerT__2           = 3
	GovaluateLexerT__3           = 4
	GovaluateLexerT__4           = 5
	GovaluateLexerT__5           = 6
	GovaluateLexerT__6           = 7
	GovaluateLexerT__7           = 8
	GovaluateLexerT__8           = 9
	GovaluateLexerT__9           = 10
	GovaluateLexerT__10          = 11
	GovaluateLexerT__11          = 12
	GovaluateLexerT__12          = 13
	GovaluateLexerT__13          = 14
	GovaluateLexerT__14          = 15
	GovaluateLexerT__15          = 16
	GovaluateLexerT__16          = 17
	GovaluateLexerT__17          = 18
	GovaluateLexerT__18          = 19
	GovaluateLexerT__19          = 20
	GovaluateLexerT__20          = 21
	GovaluateLexerT__21          = 22
	GovaluateLexerT__22          = 23
	GovaluateLexerT__23          = 24
	GovaluateLexerT__24          = 25
	GovaluateLexerT__25          = 26
	GovaluateLexerT__26          = 27
	GovaluateLexerT__27          = 28
	GovaluateLexerT__28          = 29
	GovaluateLexerT__29          = 30
	GovaluateLexerT__30          = 31
	GovaluateLexerT__31          = 32
	GovaluateLexerT__32          = 33
	GovaluateLexerT__33          = 34
	GovaluateLexerT__34          = 35
	GovaluateLexerT__35          = 36
	GovaluateLexerT__36          = 37
	GovaluateLexerT__37          = 38
	GovaluateLexerFLOAT_LITERAL  = 39
	GovaluateLexerSTRING_LITERAL = 40
	GovaluateLexerBOOL_LITERAL   = 41
	GovaluateLexerIDENTIFIER     = 42
	GovaluateLexerWS             = 43
)
